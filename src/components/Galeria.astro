---
import "photoswipe/style.css";
import Section from "@/components/Section.astro";
import editionsInfo from "@/data/meta-gallery.json";
import Button from "./Button.astro";

const offset = 9;
const { edicion } = Astro.props;
const editionIndex = Number(edicion) - 1;
const photos = editionsInfo[editionIndex].slice(0, offset);

const { i18n } = Astro.props;
---

<Section
  id={i18n.ROUTES.PROJECTS.ID}
  heading={i18n.INFO.PROJECTS_TITLE}
  subheading={i18n.INFO.PROJECTS_TEXT}
>
  <masonry-layout
    gap="24"
    maxcolwidth="600"
    class="lg:mx-auto py-20"
    id="gallery"
  >
    {
      photos.map(({ alt, width, height }, i) => (
        <a
          class="group rounded-xl hover:scale-105 hover:contrast-[110%] transition-all relative"
          href={`/projects/${edicion}/gallery/img-${i + 1}.webp`}
          target="_blank"
          data-cropped="true"
          data-pswp-width={width}
          data-pswp-height={height}
        >
          <img
            class="rounded-xl object-cover w-full h-auto"
            loading="lazy"
            src={`/projects/${edicion}/gallery/thumbnails/img-${i + 1}.webp`}
            alt={alt}
          />
          <img
            class="blur-md opacity-0 group-hover:opacity-100 absolute inset-0 transition contrast-150 -z-10 object-cover"
            loading="lazy"
            src={`/projects/${edicion}/gallery/thumbnails/img-${i + 1}.webp`}
            alt="Imagen con efecto blur para hacer de sombra de una fotografía de los premios ESLAND"
          />
        </a>
      ))
    }
  </masonry-layout>

  <div class="text-center mx-auto">
    <Button id="load-more" url="#">Descúbrelas todas</Button>
  </div>
</Section>

<script>
  import PhotoSwipeLightbox from "photoswipe/lightbox";
  import "@appnest/masonry-layout";

  document.addEventListener("astro:page-load", () => {
    const lightbox = new PhotoSwipeLightbox({
      gallery: "#gallery",
      children: "a",
      pswpModule: () => import("photoswipe"),
    });

    lightbox.init();
  });
</script>

<script define:vars={{ edicion, offset }}>
  document.addEventListener("astro:page-load", () => {
    const $button = document.querySelector("#load-more");
    // clone first element of gallery
    const $first = document.querySelector("#gallery a:first-child");

    $button?.addEventListener("click", async (e) => {
      $button.remove();
      e.preventDefault();
      const res = await fetch(`/api/gallery.json?edition=1&offset=${offset}`);
      const images = await res.json();

      const html = images
        .map((img, index) => {
          const imgIndex = index + offset + 1;
          const $clone = $first?.cloneNode(true);

          $clone.setAttribute("data-pswp-width", img.width);
          $clone.setAttribute("data-pswp-height", img.height);
          $clone.setAttribute(
            "href",
            `/projects/${edicion}/gallery/img-${imgIndex}.webp`
          );
          $clone.classList.add("animate-fade-up");
          $clone.classList.add("animate-delay-300");
          $clone.classList.add("opacity-0");
          $clone
            .querySelector("img:first-child")
            .setAttribute(
              "src",
              `/projects/${edicion}/gallery/thumbnails/img-${imgIndex}.webp`
            );
          $clone
            .querySelector("img:last-child")
            .setAttribute(
              "src",
              `/projects/${edicion}/gallery/thumbnails/img-${imgIndex}.webp`
            );

          return $clone?.outerHTML;
        })
        .join("");

      document.querySelector("#gallery")?.insertAdjacentHTML("beforeend", html);
      document.querySelector("masonry-layout").scheduleLayout();
    });
  });
</script>

<style is:global>
  .pswp {
    --pswp-bg: #00012a;
  }

  #gallery a {
    cursor: zoom-in;
  }

  @media (prefers-reduced-motion: no-preference) {
    masonry-layout img {
      scale: 0.8;
      opacity: 0;
      animation: fade-in linear forwards;
      animation-timeline: view();
      animation-range: entry 100px;
    }

    @keyframes fade-in {
      to {
        scale: 1;
        opacity: 1;
      }
    }
  }
</style>
