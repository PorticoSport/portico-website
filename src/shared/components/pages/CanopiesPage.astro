---
import Layout from "@/shared/layouts/Layout.astro";
import SectionContact from "@/shared/components/sections/SectionContact.astro";
import Typography from "@/shared/components/ui/Typography.astro"
import Button from "@/shared/components/Button.astro"
import Breadcrumb from "@/shared/components/Breadcrumb.astro";
import Video from "@/shared/components/Video.astro";
import Section from "@/shared/components/Section.astro";
import { getI18N, getCurrentLocale } from "@/shared/i18n";
import Gallery from "../Gallery.astro";
import { type Photo } from "@/types/types";
import FeatureList from "@/shared/components/FeatureList.astro";

interface Props {
  language: string;
  canopiesGallery: Photo[];
}

const { language, canopiesGallery } = Astro.props;
const i18n = getI18N({ language });
const currentLocale = getCurrentLocale({ language });

const images = i18n.PAGES.CANOPIES.FEATURE_SECTION.IMAGES;
---

<Layout
  title={i18n.PAGES.CANOPIES.SEO_TITLE}
  description={i18n.PAGES.CANOPIES.SEO_DESCRIPTION}
  ogImage={i18n.PAGES.CANOPIES.OG_IMG}
  currentLocale={currentLocale}
  language={language}
>
  <Video language={language} video="/cubiertas-spot.webm" classVideo="cp-elipse video">
    <Section className="absolute z-10 animate-fade-up flex flex-col max-w-none h-full justify-between sm:justify-center">
      <div class="lg:p-16 flex flex-col md:gap-8 flex-1 justify-center max-w-[1400]">
        <header class="text-center md:pt-20 flex flex-col justify-center items-center">
          <Typography tag="p" text={i18n.PAGES.CANOPIES.PRETITLE} responsive />
          <Typography tag="h1" className="uppercase mb-6 font-bold" text={i18n.PAGES.CANOPIES.TITLE} responsive />
          <Typography tag="p" type="secondary" className="mb-6 text-xl" text={i18n.PAGES.CANOPIES.SUBTITLE} responsive />
          <Typography tag="p" type="primary" className="mb-6 font-thin text-xl" text={i18n.PAGES.CANOPIES.SUBSUBTITLE} responsive />
          <Typography tag="p" className="max-w-[60ch]" text={i18n.PAGES.CANOPIES.DESCRIPTION} responsive />
        </header>
      </div>
      <Button target="_self" class="self-center" url={`#${i18n.PAGES.CANOPIES.CONTACT_SECTION.ID}`}>
        {i18n.PAGES.CANOPIES.CONTACT_SECTION.TITLE}
      </Button>
    </Section>
  </Video>
  <main class="flex flex-col gradient-bg relative">
    <Breadcrumb
      crumbs={[
        { label: i18n.PAGES.HOME.ROUTE.BREADCRUMB, href: i18n.PAGES.HOME.ROUTE.URL },
        { label: i18n.PAGES.CANOPIES.ROUTE.LABEL, href: i18n.PAGES.CANOPIES.ROUTE.URL },
      ]}
    />
    <Section
      classNameSubHeading="md:px-40 text-white"
      heading={i18n.PAGES.CANOPIES.FIRST_SECTION.TITLE}
      subheading={i18n.PAGES.CANOPIES.FIRST_SECTION.DESCRIPTION}
    >
      <img
        src={i18n.PAGES.CANOPIES.FIRST_SECTION.IMAGE.src}
        alt={i18n.PAGES.CANOPIES.FIRST_SECTION.IMAGE.alt}
        class="w-full img-structure"
      />
    </Section>
    <Section
      className="flex flex-col max-w-none my-8 p-0 lg:mb-0"
      style="padding: 0; margin-left: 0; margin-right: 0;"
    >
      <Typography tag="h2" className="mx-auto text-center mb-8 font-semibold px-8" text={i18n.PAGES.CANOPIES.FEATURE_SECTION.TITLE} responsive />
      <Typography tag="div" className="text-center mx-auto mb-10 max-w-[60ch]" text={i18n.PAGES.CANOPIES.FEATURE_SECTION.DESCRIPTION} />
      <div class="flex flex-col xl:flex-row max-w-none">
        <div class="relative flex-1">
          {
            images.map(({id, src, alt}, index) => (
              <img
                loading="lazy"
                draggable={false}
                id={id}
                src={src}
                alt={alt}
                class={`${index === 0 ? "relative" : "absolute"} object-cover w-full xl:max-w-[1024px] xl:w-auto top-0 left-0 transition-opacity image ${index === 0 ? "opacity-100" : "opacity-0"}`}
              />
            ))
          }
        </div>
        <div class="w-full py-8 px-4 md:px-8 xl:-ml-72 flex-1 z-10">
          <Typography tag="h3" type="primary" className="font-thin mb-4" text={i18n.PAGES.CANOPIES.FEATURE_SECTION.LIST_TITLE} responsive />
          <Typography tag="p" text={i18n.PAGES.CANOPIES.FEATURE_SECTION.LIST_DESCRIPTION} responsive />
          <FeatureList list={i18n.PAGES.CANOPIES.FEATURE_SECTION.LIST} />
        </div>
      </div>
    </Section>
    <Section
      className="flex flex-col max-w-none p-0 lg:mb-0"
      style="padding: 0; margin-left: 0; margin-right: 0;"
    >
      <div class="flex flex-col-reverse xl:flex-row max-w-none">
        <div class="w-full py-8 px-4 flex-1 md:px-8">
          <Typography tag="h2" className="mx-auto text-center mb-8 font-semibold px-8" text={i18n.PAGES.CANOPIES.ADVANTAGE_SECTION.TITLE} responsive />
          <Typography tag="div" className="text-center mx-auto mb-10 max-w-[60ch]" text={i18n.PAGES.CANOPIES.ADVANTAGE_SECTION.DESCRIPTION} />
        </div>
        <div class="relative w-full flex-1">
          <video
            autoplay
            loop
            muted
            playsinline
            id="main-video"
            preload="metadata"
            class="video h-full w-full object-cover object-top animate-duration-[2s] animate-ease-in-out brightness-50"
          >
            <source src="/canopies/canopy-noruega.mp4" type="video/webm" />
          </video>
        </div>
      </div>
    </Section>
    <Gallery
      id="gallery-canopies"
      heading={i18n.PAGES.CANOPIES.GALLERY.TITLE}
      path="canopies/gallery"
      offset={i18n.PAGES.CANOPIES.GALLERY.OFFSET}
      photos={canopiesGallery}
    />
    <SectionContact
      id={i18n.PAGES.CANOPIES.CONTACT_SECTION.ID}
      hiddenSubject
      subject={i18n.PAGES.CANOPIES.CONTACT_SECTION.SUBJECT}
      title={i18n.CONTACT_FORM.TITLE_CANOPIES}
      description={i18n.PAGES.CANOPIES.CONTACT_SECTION.DESCRIPTION}
      language={language}
      bgImage={i18n.PAGES.CANOPIES.CONTACT_SECTION.BG_IMAGE}
      image={i18n.PAGES.CANOPIES.CONTACT_SECTION.IMAGE}
    />
  </main>
</Layout>

<style>
  .img-structure:hover {
    filter: drop-shadow(1px 1px 20px rgb(183 228 253));
  }

  ul {
    font-size: 1em;
  }

  ul li span {
    flex: 1;
  }

  @media (min-width: 1280px) {
    .image {
      -webkit-mask: linear-gradient(
        90deg,
        transparent,
        white 0,
        white 30%,
        transparent
      );
      mask: linear-gradient(
        90deg,
        transparent,
        white 0,
        white 30%,
        transparent
      );
    }

    .video {
      -webkit-mask: linear-gradient(
        -90deg,
        transparent,
        white 0,
        white 30%,
        transparent
      );
      mask: linear-gradient(
        -90deg,
        transparent,
        white 0,
        white 30%,
        transparent
      );
    }
  }
</style>

<script is:inline define:vars={{ images }}>
  const updateImages = (images) => {
    // cambiar a la siguiente imagen cada 3 segundos

    let index = 0;
    setInterval(() => {
      const currentImage = images[index];
      const nextImage = images[index + 1] || images[0];

      const currentImageElement = document.getElementById(currentImage.id);
      const nextImageElement = document.getElementById(nextImage.id);

      if (currentImageElement && nextImageElement) {
        currentImageElement.classList.remove("opacity-100");
        currentImageElement.classList.add("opacity-0");
        nextImageElement.classList.remove("opacity-0");
        nextImageElement.classList.add("opacity-100");
      }

      index = index + 1;
      if (index === images.length) index = 0;
    }, 3000);
  };

  updateImages(images);
</script>
