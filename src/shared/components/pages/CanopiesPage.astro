---
import Layout from "@/shared/layouts/Layout.astro";
import SectionContact from "@/shared/components/sections/SectionContact.astro";
import Breadcrumb from "@/shared/components/Breadcrumb.astro";
import Section from "@/shared/components/Section.astro";
import { getI18N, getCurrentLocale } from "@/shared/i18n";
import Gallery from "../Gallery.astro";
import { type Photo } from "@/types/types";
import FeatureList from "@/shared/components/FeatureList.astro";

interface Props {
  language: string;
  canopiesGallery: Photo[];
}

const { language, canopiesGallery } = Astro.props;
const i18n = getI18N({ language });
const currentLocale = getCurrentLocale({ language });

const images = i18n.CANOPIES.FEATURE_SECTION.IMAGES;
---

<Layout
  title={i18n.CANOPIES.SEO_TITLE}
  description={i18n.CANOPIES.SEO_DESCRIPTION}
  currentLocale={currentLocale}
  language={language}
  bgImage="/heros/CanopiesWebsPorticoSport.webp"
>
  <main class="flex flex-col gradient-bg relative">
    <div class="text-center left-0 top-0 w-full min-h-[40rem] lg:aspect-video flex justify-center items-center flex-col gap-4 px-4">
      <span class="uppercase text-balance">{i18n.CANOPIES.PRETITLE}</span
      >
      <h1
        class="text-xl md:text-2xl lg:text-4xl uppercase mb-6 text-balance"
        set:html={i18n.CANOPIES.TITLE}
      />
      <h2 class="text-base md:text-xl lg:text-2xl mb-2 text-secondary text-balance">
        {i18n.CANOPIES.SUBTITLE}
      </h2>
      <h3 class="text-base md:text-lg lg:text-xl font-thin text-primary text-balance">
        {i18n.CANOPIES.SUBSUBTITLE}
      </h3>
      <p class="max-w-80 md:max-w-[500px] text-balance">{i18n.CANOPIES.DESCRIPTION}</p>
    </div>
    <div class="bg-main relative bg-background">
      <Breadcrumb
        crumbs={[
          { label: i18n.ROUTES.HOME.LABEL, href: i18n.ROUTES.HOME.URL },
          { label: i18n.ROUTES.CANOPIES.LABEL, href: i18n.ROUTES.CANOPIES.URL },
        ]}
      />
      <Section
        heading={i18n.CANOPIES.FIRST_SECTION.TITLE}
        subheading={i18n.CANOPIES.FIRST_SECTION.DESCRIPTION}
      >
        <img
          src={i18n.CANOPIES.FIRST_SECTION.IMAGE.src}
          alt={i18n.CANOPIES.FIRST_SECTION.IMAGE.alt}
          class="w-full img-structure"
        />
      </Section>
      <Section
        className="flex flex-col max-w-none my-8 p-0 lg:mb-0"
        style="padding: 0; margin-left: 0; margin-right: 0;"
      >
        <h2 class="mx-auto mb-8 text-center text-3xl lg:text-6xl text-balance font-semibold tracking-wide px-8">
          {i18n.CANOPIES.FEATURE_SECTION.TITLE}
        </h2>
        <p class="text-center mx-auto text-2xl text-pretty mb-10 max-w-[60ch]">
          {i18n.CANOPIES.FEATURE_SECTION.DESCRIPTION}
        </p>
        <div class="flex flex-col xl:flex-row max-w-none">
          <div class="relative w-full flex-1">
            {
              images.map(({id, src, alt}, index) => (
                <img
                  loading="lazy"
                  draggable={false}
                  id={id}
                  src={src}
                  alt={alt}
                  class={`${index === 0 ? "relative" : "absolute"} object-cover w-full xl:max-w-[1024px] top-0 left-0 transition-opacity image ${index === 0 ? "opacity-100" : "opacity-0"}`}
                />
              ))
            }
          </div>
          <div class="w-full py-8 px-4 md:px-8 xl:-ml-72 flex-1 z-10">
            <h3 class="text-2xl text-balance font-thin mb-4 text-primary">
              {i18n.CANOPIES.FEATURE_SECTION.LIST_TITLE}
            </h3>
            <p class="text-pretty">
              {i18n.CANOPIES.FEATURE_SECTION.LIST_DESCRIPTION}
            </p>
            <FeatureList list={i18n.CANOPIES.FEATURE_SECTION.LIST} />
          </div>
        </div>
      </Section>
      <Section
        className="flex flex-col max-w-none p-0 lg:mb-0"
        style="padding: 0; margin-left: 0; margin-right: 0;"
      >
        <div class="flex flex-col-reverse xl:flex-row max-w-none">
          <div class="w-full py-8 px-4 flex-1 md:px-8">
            <h2 class="text-3xl text-balance mb-6 text-secondary font-bold uppercase">
              {i18n.CANOPIES.ADVANTAGE_SECTION.TITLE}
            </h2>
            <div class="text-pretty" set:html={i18n.CANOPIES.ADVANTAGE_SECTION.DESCRIPTION} />
          </div>
          <div class="relative w-full flex-1">
            <video
              autoplay
              loop
              muted
              playsinline
              id="main-video"
              preload="metadata"
              class="video h-full w-full object-cover object-top animate-duration-[2s] animate-ease-in-out brightness-50"
            >
              <source src="/cubiertas-spot.webm" type="video/webm" />
            </video>
          </div>
        </div>
      </Section>
      <Gallery
        id="gallery-canopies"
        path="canopies"
        offset={9}
        photos={canopiesGallery}
        loadMoreText={i18n.CANOPIES.GALLERY.BUTTON_TEXT}
      />
      <SectionContact
        hiddenSubject
        subject={i18n.CANOPIES.CONTACT_SECTION.SUBJECT}
        language={language}
        bgImage={i18n.CANOPIES.CONTACT_SECTION.BG_IMAGE}
        image={i18n.CANOPIES.CONTACT_SECTION.IMAGE}
      />
    </div>
  </main>
</Layout>

<style>
  .img-structure:hover {
    filter: drop-shadow(1px 1px 20px rgb(183 228 253));
  }

  ul {
    font-size: 1em;
  }

  ul li span {
    flex: 1;
  }

  @media (min-width: 1280px) {
    .image {
      -webkit-mask: linear-gradient(
        90deg,
        transparent,
        white 0,
        white 30%,
        transparent
      );
      mask: linear-gradient(
        90deg,
        transparent,
        white 0,
        white 30%,
        transparent
      );
    }

    .video {
      -webkit-mask: linear-gradient(
        -90deg,
        transparent,
        white 0,
        white 30%,
        transparent
      );
      mask: linear-gradient(
        -90deg,
        transparent,
        white 0,
        white 30%,
        transparent
      );
    }
  }
</style>

<script is:inline define:vars={{ images }}>
  const updateImages = (images) => {
    // cambiar a la siguiente imagen cada 3 segundos

    let index = 0;
    setInterval(() => {
      const currentImage = images[index];
      const nextImage = images[index + 1] || images[0];

      const currentImageElement = document.getElementById(currentImage.id);
      const nextImageElement = document.getElementById(nextImage.id);

      if (currentImageElement && nextImageElement) {
        currentImageElement.classList.remove("opacity-100");
        currentImageElement.classList.add("opacity-0");
        nextImageElement.classList.remove("opacity-0");
        nextImageElement.classList.add("opacity-100");
      }

      index = index + 1;
      if (index === images.length) index = 0;
    }, 3000);
  };

  updateImages(images);
</script>
