---
import Layout from "@/shared/layouts/Layout.astro";
import SectionContact from "@/shared/components/sections/SectionContact.astro";
import Breadcrumb from "@/shared/components/Breadcrumb.astro";
import SectionFactory from "@/shared/components/sections/SectionFactory.astro"
import Section from "@/shared/components/Section.astro";
import { getI18N, getCurrentLocale } from "@/shared/i18n";

interface Props {
  language: string;
}

const { language } = Astro.props;
const i18n = getI18N({ language });
const currentLocale = getCurrentLocale({ language });

const images = i18n.PAGES.FACTORY.FEATURE_SECTION.IMAGES;
const secondImages = i18n.PAGES.FACTORY.INFORMATION_SECTION.IMAGES;
---

<Layout
  title={i18n.PAGES.FACTORY.SEO_TITLE}
  description={i18n.PAGES.FACTORY.SEO_DESCRIPTION}
  currentLocale={currentLocale}
  language={language}
  bgImage="/heros/background-factory.webp"
  bgClass="brightness-50"
>
  <main class="flex flex-col gradient-bg relative">
    <div
      class="text-center left-0 top-0 w-full min-h-[40rem] lg:aspect-video flex justify-center items-center flex-col gap-4 px-4"
    >
      <span class="uppercase text-balance text-secondary">{i18n.PAGES.FACTORY.SUBTITLE}</span>
      <h1
        class="text-xl md:text-2xl lg:text-4xl uppercase mb-6 text-balance"
        set:html={i18n.PAGES.FACTORY.TITLE}
      />
      <div
        class="max-w-80 md:max-w-[700px] text-lg md:text-xl text-balance"
        set:html={i18n.PAGES.FACTORY.DESCRIPTION}
      />
    </div>
    <div class="bg-main relative bg-background">
      <Breadcrumb
        crumbs={[
          { label: i18n.PAGES.HOME.ROUTE.LABEL, href: i18n.PAGES.HOME.ROUTE.URL },
          { label: i18n.PAGES.FACTORY.ROUTE.LABEL, href: i18n.PAGES.FACTORY.ROUTE.URL },
        ]}
      />
      <SectionFactory language={language} />
      <Section
        className="flex flex-col max-w-none my-8 p-0 lg:mb-0"
        style="padding: 0; margin-left: 0; margin-right: 0;"
      >
        <div class="flex flex-col xl:flex-row max-w-none">
          <div class="relative w-full flex-1">
            {
              images.map(({id, src, alt}, index:number) => (
                <img
                  loading="lazy"
                  draggable={false}
                  id={id}
                  src={src}
                  alt={alt}
                  class={`${index === 0 ? "relative" : "absolute"} object-cover w-full xl:max-w-[1024px] top-0 left-0 transition-opacity aspect-[16/11] image ${index === 0 ? "opacity-100" : "opacity-0"}`}
                />
              ))
            }
          </div>
          <div class="w-full py-8 px-4 md:px-8 xl:-ml-72 flex-1 z-10">
            <h2 class="mx-auto mb-8 text-center text-3xl lg:text-6xl text-balance font-semibold tracking-wide px-8">
              {i18n.PAGES.FACTORY.FEATURE_SECTION.TITLE}
            </h2>
            <div
              class="text-2xl text-pretty font-thin mb-4 text-primary"
              set:html={i18n.PAGES.FACTORY.FEATURE_SECTION.DESCRIPTION}
            />
          </div>
        </div>
      </Section>
      <Section
        className="flex flex-col max-w-none p-0 lg:mb-0"
        style="padding: 0; margin-left: 0; margin-right: 0;"
      >
        <div class="flex flex-col-reverse xl:flex-row max-w-none">
          <div class="w-full py-8 px-4 flex-1 md:px-8">
            <h2 class="mx-auto mb-8 text-center text-3xl lg:text-6xl text-balance font-semibold tracking-wide px-8">
              {i18n.PAGES.FACTORY.INFORMATION_SECTION.TITLE}
            </h2>
            <div class="text-pretty" set:html={i18n.PAGES.FACTORY.INFORMATION_SECTION.DESCRIPTION} />
          </div>
          <div class="relative w-full flex-1">
            {
              secondImages.map(({id, src, alt}, index:number) => (
                <img
                  loading="lazy"
                  draggable={false}
                  id={id}
                  src={src}
                  alt={alt}
                  class={`${index === 0 ? "relative" : "absolute"} object-cover aspect-[16/11] w-full xl:max-w-[1024px] top-0 left-0 transition-opacity image-reverse ${index === 0 ? "opacity-100" : "opacity-0"}`}
                />
              ))
            }
          </div>
        </div>
      </Section>
      <SectionContact
        title={i18n.PAGES.FACTORY.CONTACT_SECTION.TITLE}
        description={i18n.PAGES.FACTORY.CONTACT_SECTION.DESCRIPTION}
        hiddenSubject
        subject={i18n.PAGES.FACTORY.CONTACT_SECTION.SUBJECT}
        language={language}
        bgImage={i18n.PAGES.FACTORY.CONTACT_SECTION.BG_IMAGE}
      />
    </div>
  </main>
</Layout>

<style>

  @media (min-width: 1280px) {
    .image {
      -webkit-mask: linear-gradient(
        90deg,
        transparent,
        white 0,
        white 30%,
        transparent
      );
      mask: linear-gradient(
        90deg,
        transparent,
        white 0,
        white 30%,
        transparent
      );
    }

    .image-reverse {
      -webkit-mask: linear-gradient(
        -90deg,
        transparent,
        white 0,
        white 30%,
        transparent
      );
      mask: linear-gradient(
        -90deg,
        transparent,
        white 0,
        white 30%,
        transparent
      );
    }
  }
</style>

<script is:inline define:vars={{ images, secondImages }}>
  const updateImages = (images) => {
    debugger
    // cambiar a la siguiente imagen cada 3 segundos

    let index = 0;
    setInterval(() => {
      const currentImage = images[index];
      const nextImage = images[index + 1] || images[0];

      const currentImageElement = document.getElementById(currentImage.id);
      const nextImageElement = document.getElementById(nextImage.id);

      if (currentImageElement && nextImageElement) {
        currentImageElement.classList.remove("opacity-100");
        currentImageElement.classList.add("opacity-0");
        nextImageElement.classList.remove("opacity-0");
        nextImageElement.classList.add("opacity-100");
      }

      index = index + 1;
      if (index === images.length) index = 0;
    }, 3000);
  };

  updateImages(images);
  updateImages(secondImages);
</script>
