---
import Button from '@/shared/components/Button.astro';
import Typography from "@/shared/components/ui/Typography.astro"
import CarouselImages from '@/shared/components/CarouselImages.astro';



interface Props {
  
  title?: string;
  heading?: string;
  description?: string;
  bgImage?: string;
  images?: string;
  hideHeader?: boolean;
  hideFooter?: boolean;
  hideBody?: boolean;
  className?: string;
  buttonText?: string;
  buttonUrl?: string;
  target?: string;
}

const { title, heading, images,description, hideHeader = false, hideFooter = false, hideBody = false, bgImage, className, buttonText, buttonUrl, target="_self" } = Astro.props;
---

<article class=`w-full mx-auto my-14 ${className ? className : ''}`>
  <div class="border  bg-black/30 rounded-xl border-primary p-6 "
    style={{
      backgroundImage: bgImage ? `url(${bgImage})` : '',
      backgroundSize: 'cover',
      backgroundPosition: 'center',
      backgroundRepeat: 'no-repeat'
    }}>
    {
      !hideHeader && (
        <slot name="slot-header">
          <header class="flex-col-reverse min-h-[500px] justify-center md:justify-between ">
            <div class="flex" slot="body">
        <CarouselImages images={images} />
      </div>
        
      
            <div class="flex flex-1 flex-col self-end mt-3">
              {title && (<Typography tag="p" type="secondary" className="font-bold uppercase" text={title} responsive />)}
              
            </div>
            <hr class="lg:border-t-2 lg:border-gray-600 mt-0">
            <div class="flex-1 border-t-primary  border-t mt-3 md:border-none flex flex-col justify-between gap-y-3 md:pt-0">
            
              {heading && (<Typography tag="h3" className="" text={heading} type="primary" responsive />)}
              {description && (<Typography tag="div" className="lg:mb-2 mb-0 items-center h-[165px]" text={description} size="small" />)}
              {buttonText && buttonUrl && <Button url={buttonUrl} class="text-base truncate scale-[85%] self-center mb-0 text-center" target={target}>{buttonText}</Button>}
            </div>
          </header>
        </slot>
      )
    }
    {
      !hideBody && (
        <body>
          <slot name="body" />
        </body>
      )
    }
    {
      !hideBody && (
        <footer>
          <slot name="footer" />
        </footer>
      )
    }
  </div>
</article>
