---
import Button from "./Button.astro";
import ContactForm from "@/shared/components/forms/ContactForm.astro";
import Typography from "@/shared/components/ui/Typography.astro"

interface Props {
  showContactForm?: boolean;
  language: string;
  video: string;
  subtitle?: string;
  title?: string;
  buttonUrl?: string;
  buttonText?: string;
  classVideo?: string;
  subject?: string;
}

const { video, classVideo, subtitle, title, buttonUrl, buttonText, language, showContactForm, subject } = Astro.props;

function getTipeFromVideo() {
  const videoExtension = video.split(".").pop();
  if (videoExtension === "mp4") {
    return "video/mp4";
  }
  if (videoExtension === "webm") {
    return "video/webm";
  }
  return "video/mp4";
}

const type = getTipeFromVideo();
---

<div
  class="relative h-[105dvh] w-full max-w-[100vw] md:aspect-video"
>
  <div
    class="absolute inset-0 h-full z-10 m-auto flex flex-col items-center w-full"
  >
    <slot>
      <section
        class="absolute z-20 animate-fade-up flex justify-center gap-8 flex-col pt-20 lg:flex-row max-w-[1400px] mx-auto px-4"
      >
        <div class="text-center pt-20 flex flex-col gap-4">
          {
            subtitle && (<Typography tag="p" className="subtitle text-center px-4 mb-0" text={subtitle} responsive />)
          }
          {
            title && (<Typography tag="h1" className="items-center gap-5 lg:gap-20 px-4 text-center" text={title} responsive />)
          }
          {
            buttonUrl && buttonText ? (
              <Button
                target="_self"
                class="animate-fade-up block lg:hidden mx-auto mt-10"
                url={buttonUrl}
              >
                {buttonText}
              </Button>
            ) : null
          }
        </div>
        {
          showContactForm && subject && (
            <div class="p-4 bg-black/50 rounded-xl hidden lg:block">
              <ContactForm language={language} hiddenSubject={true} subject={subject} />
            </div>
          )
        }
      </section>
    </slot>

    <video
      autoplay
      loop
      muted
      playsinline
      id="main-video"
      preload="metadata"
      class={`video hidden cp-v h-full w-full object-cover object-top animate-duration-[2s] animate-ease-in-out brightness-50 ${classVideo}`}
    >
      <source src={video} type={type} />
    </video>
  </div>
  <video
    class="video hidden absolute -bottom-48 -z-40 blur-3xl animate-duration-[2s] animate-ease-in-out brightness-50"
    autoplay
    loop
    muted
    preload="metadata"
  >
    <source src={video} type={type} />
  </video>
  <slot name="bottom" />
</div>

<script>
  document.addEventListener("astro:page-load", () => {
    const firstVideo = document.querySelector(
      "#main-video"
    ) as HTMLMediaElement;

    if (firstVideo) {
      const videos = document.querySelectorAll(
        ".video"
      ) as NodeListOf<HTMLMediaElement>;

      if (firstVideo.readyState >= 3) {
        videos.forEach((videoEl) => {
          videoEl.classList.remove("hidden");
          videoEl.classList.add("animate-fade");
        });

        return;
      }

      firstVideo.addEventListener("loadeddata", () => {
        videos.forEach((videoEl) => {
          videoEl.classList.remove("hidden");
          videoEl.classList.add("animate-fade");
        });
      });
    }
  });
</script>

<style>

  .subtitle {
    text-shadow: 0 0 5px rgba(0, 0, 0, 0.5);
  }
</style>
