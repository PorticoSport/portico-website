---
import { type Review } from "@/types/types.ts";
import Section from "@/shared/components/Section.astro";
import { getI18N } from "@/shared/i18n";
import Typography from "@/shared/components/ui/Typography.astro";

interface Props {
  reviews: Review[];
  language: string;
}

const { language, reviews = [] } = Astro.props;
const i18n = getI18N({ language });
---

<div class="bg-white cont text-black mb-12">
  <Section>
    <Typography
      tag="h2"
      type="black"
      className="font-bold text-center mb-12"
      text={i18n.PAGES.HOME.REVIEWS_SECTION.TITLE}
    />
    <Typography
      tag="h3"
      type="black"
      className="text-center mb-12"
      text={i18n.PAGES.HOME.REVIEWS_SECTION.SUBTITLE}
    />

    <div
      id="reviews-container"
      class="reviews-container"
      data-reviews={JSON.stringify(reviews)}
    >
    </div>
  </Section>
</div>

<style is:global>
  .reviews-container {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1rem;
    opacity: 1;
    transition: opacity 0.8s ease-in-out;
  }

  .reviews-container.fade-out {
    opacity: 0;
  }

  .review-card {
    width: 100%;
    aspect-ratio: 1 / 1;
    border: 1px solid #ccc;
    border-radius: 0.5rem;
    padding: 1rem;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    background-color: white;
  }

  .review-card h4 {
    font-size: 1rem;
    margin-bottom: 0.5rem;
    word-break: break-word;
  }

  .review-card p {
    font-size: 0.9rem;
    margin: 0;
    color: #555;
    font-style: italic;
  }
</style>

<script type="module">
  document.addEventListener('DOMContentLoaded', () => {
    const container = document.getElementById('reviews-container');
    const reviewsData = container.getAttribute('data-reviews');
    if (!reviewsData) return;

    const reviews = JSON.parse(reviewsData);
    let currentIndex = 0;
    const reviewsPerPage = 3;

    function updateReviews() {
      container.classList.add('fade-out');

      setTimeout(() => {
        container.innerHTML = ''; 

        for (let i = 0; i < reviewsPerPage; i++) {
          const index = (currentIndex + i) % reviews.length;
          const review = reviews[index];

          const reviewCard = document.createElement('div');
          reviewCard.classList.add('review-card');

          const h4 = document.createElement('h4');
          h4.textContent = review.review;

          const p = document.createElement('p');
          p.textContent = `📍 ${review.autor}`;

          reviewCard.appendChild(h4);
          reviewCard.appendChild(p);

          container.appendChild(reviewCard);
        }

        container.classList.remove('fade-out');
        currentIndex = (currentIndex + reviewsPerPage) % reviews.length;
      }, 800);
    }

    updateReviews(); 
    setInterval(updateReviews, 20000); 
  });
</script>
