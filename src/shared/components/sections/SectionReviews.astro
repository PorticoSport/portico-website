---
import { type Review } from "@/types/types.ts";
import Section from "@/shared/components/Section.astro";
import { getI18N } from "@/shared/i18n";

interface Props {
  reviews: Review[];
  language: string;
}

const { language, reviews = [] } = Astro.props
const i18n = getI18N({ language });

---
<div class="bg-white cont text-black mb-12 ">
  <Section id={i18n.PAGES.HOME.REVIEWS_SECTION.ID} heading2={i18n.PAGES.HOME.REVIEWS_SECTION.TITLE}>
  <div
    id="reviews-container"
    class="reviews-container"
    data-reviews={JSON.stringify(reviews)}
  >
    {
      reviews.slice(0, 3).map(({ autor, review }) => (
        <div class="review-card">
          <h4 >{review}</h4>
          <p>üìç {autor}</p>
          
        </div>
      ))
    }
  </div>
</Section>
</div>
<style>
  
  .reviews-container {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 1rem;
  opacity: 1;
  transition: opacity 0.8s ease-in-out;
  
}


.reviews-container.fade-out {
  opacity: 0;
}

.review-card {
  flex: 1 1 calc(33.333% - 1rem); /* 3 columnas con gap ajustado */
  box-sizing: border-box; /* Asegura que el padding no rompa el ancho */
  min-width: 250px; /* Opcional, para evitar que colapsen en pantallas chicas */
  border-radius: 0.5rem;
  padding: 1rem;
  overflow: hidden; /* Para que el contenido no sobresalga */
  display: flex;
  flex-direction: column;
  justify-content: space-between; /* Si quer√©s que el contenido interno tenga separaci√≥n */

}

.review-card h4 {
  font-size: 1rem;
  margin-bottom: 0.5rem;
  word-break: break-word; /* Asegura que el texto no desborde */
}

.review-card p {
  font-size: 0.9rem;
  margin: 0;
  color: #555;
  font-style: italic;
}




</style>
<script type="module">
  document.addEventListener('DOMContentLoaded', () => {
    const container = document.getElementById('reviews-container');
    const reviewsData = container.getAttribute('data-reviews');
    if (!reviewsData) return;

    const reviews = JSON.parse(reviewsData);
    let currentIndex = 0;
    const reviewsPerPage = 3;

    function updateReviews() {
      container.classList.add('fade-out');

      setTimeout(() => {
        // Limpiar solo los hijos actuales
        while (container.firstChild) {
          container.removeChild(container.firstChild);
        }

        // Agregar los nuevos reviews
        for (let i = 0; i < reviewsPerPage; i++) {
          const index = (currentIndex + i) % reviews.length;
          const review = reviews[index];

          const reviewCard = document.createElement('div');
          reviewCard.classList.add('review-card');

          const h4 = document.createElement('h4');
          h4.textContent = review.review;

          const p = document.createElement('p');
          p.textContent = `üìç ${review.autor}`;

          reviewCard.appendChild(h4);
          reviewCard.appendChild(p);

          container.appendChild(reviewCard);
        }

        container.classList.remove('fade-out');
        currentIndex = (currentIndex + reviewsPerPage) % reviews.length;
      }, 800);
    }

    setInterval(updateReviews, 20000);
  });
</script>
