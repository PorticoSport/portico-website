---
import { getI18N } from "@/shared/i18n";
import "photoswipe/style.css";
import Section from "@/shared/components/Section.astro";
import Button from "@/shared/components/Button.astro";

interface Props {
  id: string;
  heading?: string;
  subheading?: string;
  offset?: number;
  photos: Photo[];
  loadMoreText?: string;
  path: string;
  language: string;
  urlButton?: string;
  urlText?: string;
  buttonTitle?: string;
}

const {
  heading,
  subheading,
  photos = [],
  offset = 12,
  path = "",
  loadMoreText,
  language,
  urlButton,
  urlText,
  buttonTitle,
} = Astro.props;

const i18n = getI18N({ language });
---

<Section heading={heading} subheading={subheading}>
  <div class="scroller-projects">
    <div class="scroller_inner">
      {
        photos.slice(0, offset).map(({ src, width, height, alt }: Photo) => (
          <div class="item">
            <span
              class="group rounded-xl hover:scale-105 hover:contrast-[110%] transition-all relative"
              data-cropped="true"
              data-pswp-width={width}
              data-pswp-height={height}
            >
              <img
                class="rounded-xl object-cover h-auto"
                src={`/${path}/thumbnails/${src}`}
                loading="lazy"
                alt={alt}
                width="397"
                height="264"
              />
            </span>
          </div>
        ))
      }
      {
        photos.slice(0, offset).map(({ src, width, height, alt }: Photo) => (
          <div class="item" aria-hidden="true">
            <span
              class="group rounded-xl hover:scale-105 hover:contrast-[110%] transition-all relative"
              data-cropped="true"
              data-pswp-width={width}
              data-pswp-height={height}
            >
              <img
                class="rounded-xl object-cover h-auto"
                src={`/${path}/thumbnails/${src}`}
                loading="lazy"
                alt={alt}
                width="397"
                height="264"
              />
            </span>
          </div>
        ))
      }
    </div>
  </div>

  {
    urlButton && urlText ? (
      <div class="text-center mx-auto mt-6">
        <Button url={urlButton} target="_self" title={buttonTitle}>
          {urlText}
        </Button>
      </div>
    ) : null
  }
</Section>

<style>
  .scroller-projects {
    overflow: hidden;
    position: relative;
    max-width: 100%;
  }

  .scroller_inner {
    display: flex;
    flex-wrap: nowrap;
    gap: 1rem;
    min-width: 200%;
    animation: scroll 10s linear infinite;
  }

  .item {
    flex: 0 0 auto;
  }

  @keyframes scroll {
    0% {
      transform: translateX(0%);
    }
    100% {
      transform: translateX(-50%);
    }
  }
</style>
