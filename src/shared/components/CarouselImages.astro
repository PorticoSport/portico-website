---
import "photoswipe/style.css";
import { type Photo } from "@/types/types";

interface Props {
  images: Photo[];
}

const { images = [] } = Astro.props;
---

<div class="scroller-projects wrapper w-full">
  <ul class="tag-list scroller_inner">
    {images.slice(0, 3).map((image, index) => (
      <li class="carousel-item" key={index}>
        <img
          loading="lazy"
          draggable={false}
          class="carousel-images__img"
          src={image.src}
          alt={image.alt}
          width={image.width}
          height={image.height}
        />
      </li>
    ))}
  </ul>
</div>

<script type="module">
  document.addEventListener('astro:page-load', () => {
    const scroller = document.querySelector(".scroller-projects");

    function addAnimation() {
      scroller.setAttribute("data-animated", true);
      const scrollerInner = scroller.querySelector(".scroller_inner");
      const scrollerContent = Array.from(scrollerInner.children);

      scrollerContent.forEach((item) => {
        const clone = item.cloneNode(true);
        clone.setAttribute("aria-hidden", true);
        scrollerInner.appendChild(clone);
      });
    }

    if (!window.matchMedia("(prefers-reduced-motion: reduce)").matches) {
      addAnimation();
    }
  });
</script>

<style>

.tag-list {
  list-style: none;
  padding: 0;
  margin: 0;
  display: flex;
  gap: 1rem;
}


.carousel-item {
  flex: 0 0 auto; 
  width: 300px; 
  height: auto;
  border-radius: 10px;
  overflow: hidden;
  border: 2px solid var(--primary-color);
}


.scroller-projects {
  width: 100%;
  overflow: hidden;
  position: relative;
}


.scroller_inner {
  display: flex;
  width: max-content;
  animation: scroll 15s linear infinite;
}


@keyframes scroll {
  to {
    transform: translateX(-50%);
  }
}
</style>
