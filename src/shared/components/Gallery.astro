---
import "photoswipe/style.css";
import Section from "@/shared/components/Section.astro";
import Button from "./Button.astro";
import { type Photo } from "@/types/types.ts";

interface Props {
  id: string;
  heading?: string;
  subheading?: string;
  offset?: number;
  photos: Photo[];
  path: string;
  loadMoreText?: string;
}

const {
  id,
  heading,
  subheading,
  offset = 9,
  photos = [],
  path = "",
  loadMoreText,
} = Astro.props;
---

<Section id={id} heading={heading} subheading={subheading}>
  <masonry-layout
    gap="24"
    maxcolwidth="600"
    class="lg:mx-auto py-20"
    id="gallery"
  >
    {
      photos.slice(0, offset).map(({ src, width, height, alt }: Photo) => (
        <a
          class="group rounded-xl hover:scale-105 hover:contrast-[110%] transition-all relative"
          href={`/${path}/${src}`}
          target="_blank"
          data-cropped="true"
          data-pswp-width={width}
          data-pswp-height={height}
        >
          <img
            class="rounded-xl object-cover w-full h-auto"
            loading="lazy"
            src={`/${path}/thumbnails/${src}`}
            alt={alt}
            width="397"
            height="264"
          />
          <img
            class="blur-md opacity-0 group-hover:opacity-100 absolute inset-0 transition contrast-150 -z-10 object-cover"
            loading="lazy"
            src={`/${path}/thumbnails/${src}`}
            alt={alt}
            width="397"
            height="264"
          />
          <span class="absolute bottom-0 left-0 right-0 p-4 text-white bg-black bg-opacity-50 rounded-b-xl">
            {alt}
          </span>
        </a>
      ))
    }
  </masonry-layout>

  {
    loadMoreText && photos.length > offset ? (
      <div class="text-center mx-auto">
        <Button id="load-more" url="#">
          {loadMoreText}
        </Button>
      </div>
    ) : null
  }
</Section>

<script>
  import PhotoSwipeLightbox from "photoswipe/lightbox";
  import "@appnest/masonry-layout";

  document.addEventListener("astro:page-load", () => {
    const lightbox = new PhotoSwipeLightbox({
      gallery: "#gallery",
      children: "a",
      pswpModule: () => import("photoswipe"),
    });

    lightbox.init();
  });
</script>

<script is:inline define:vars={{ photos, offset, path }}>
  class GalleryImages extends HTMLElement {
    constructor() {
      super();

      document.addEventListener("astro:page-load", () => {
        const $button = this.querySelector("#load-more");
        // clone first element of gallery
        const $first = this.querySelector("#gallery a:first-child");

        $button?.addEventListener("click", async (e) => {
          $button.remove();
          e.preventDefault();
          const html = photos
            .slice(offset)
            .map((img, index) => {
              const imgIndex = index + offset + 1;
              const $clone = $first?.cloneNode(true);

              $clone.setAttribute("data-pswp-width", img.width);
              $clone.setAttribute("data-pswp-height", img.height);
              $clone.setAttribute("href", `/${path}/${img.src}`);
              $clone.classList.add("animate-fade-up");
              $clone.classList.add("animate-delay-300");
              $clone.classList.add("opacity-0");
              $clone
                .querySelector("img:first-child")
                .setAttribute("src", `/${path}/thumbnails/${img.src}`);
              $clone
                .querySelector("img:first-child")
                .closest("img")
                .setAttribute("src", `/${path}/thumbnails/${img.src}`);
              $clone.querySelector("span:last-child").innerHTML = img.alt;
              return $clone?.outerHTML;
            })
            .join("");

          document
            .querySelector("#gallery")
            ?.insertAdjacentHTML("beforeend", html);
          this.querySelector("masonry-layout").scheduleLayout();
        });
      });
    }
  }
  customElements.define("gallery-images", GalleryImages);
</script>

<style is:global>
  .pswp {
    --pswp-bg: #00012a;
  }

  #gallery a {
    cursor: zoom-in;
  }

  @media (prefers-reduced-motion: no-preference) {
    masonry-layout img {
      scale: 0.8;
      opacity: 0;
      animation: fade-in linear forwards;
      animation-timeline: view();
      animation-range: entry 100px;
    }

    @keyframes fade-in {
      to {
        scale: 1;
        opacity: 1;
      }
    }
  }
</style>
