---
import InputText from '@/shared/components/forms/InputText';
import InputArea from '@/shared/components/forms/InputArea';
import { getI18N, getCountryListByLanguage } from "@/shared/i18n";
import FormButton from '@/shared/components/forms/FormButton';
import DataList from '@/shared/components/forms/DataList';

console.log(`method is `, Astro.request.method)

if (Astro.request.method === 'POST') {
  try{
    console.log('entrando...')
    // Getting posted data from our contact form
    const data = await Astro.request.formData();
    const name = data.get('name');
    const email = data.get('email');
    const message = data.get('message');

    // TODO: Do not forget to do validation and error handling over received data from your contact form.

    // Sending email
    const msg = {
      to: 'test@example.com', // Change to your recipient
      from: 'text@example.com', // Change to your verified sender
      replyTo: {email:email, name:name},
      subject: `Contact form submission from ${name}`,
      text: message,
    }
    console.log(msg)
    await fetch('https://porticosport.com/wp-admin/admin-ajax.php', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded',
      },
      body: new URLSearchParams({
        'action': 'wp_mail',
        'to': 'dmartin.alberto@gmail.com',
        'subject': 'Asunto del correo electr贸nico',
        'message': 'Este es un mensaje de prueba.',
        'headers': 'From: remitente@example.com',
      }),
    })
    .then(response => {
      if (response.ok) {
        console.log('Correo electr贸nico enviado correctamente');
      } else {
        console.error('Hubo un problema al enviar el correo electr贸nico');
      }
    })
    .catch(error => {
      console.error('Error al enviar el correo electr贸nico:', error);
    });

  } catch (error) {
    console.error(error);
  }
}

interface Props {
  language: string;
  sendText?: string;
  subject?: string;
  hiddenSubject?: boolean;
}

const {language, hiddenSubject, subject, sendText} = Astro.props
const i18n = getI18N({ language });
const countryList = getCountryListByLanguage({ language });
---

<form class="flex-1" method="POST">
  <InputText name={i18n.CONTACT_FORM.FORM.NAME.ID} label={i18n.CONTACT_FORM.FORM.NAME.LABEL} placeholder={i18n.CONTACT_FORM.FORM.NAME.PLACEHOLDER} />
  <InputText name={i18n.CONTACT_FORM.FORM.EMAIL.ID} label={i18n.CONTACT_FORM.FORM.EMAIL.LABEL} placeholder={i18n.CONTACT_FORM.FORM.EMAIL.PLACEHOLDER} />
  <div class="flex flex-col lg:flex-row lg:gap-3">
    <DataList className='flex-1' name={i18n.CONTACT_FORM.FORM.COUNTRY.ID} label={i18n.CONTACT_FORM.FORM.COUNTRY.LABEL} placeholder={i18n.CONTACT_FORM.FORM.COUNTRY.PLACEHOLDER} options={countryList as { option: string; label: string; }[]} />
    <InputText className='flex-1' name={i18n.CONTACT_FORM.FORM.PHONE.ID} label={i18n.CONTACT_FORM.FORM.PHONE.LABEL} placeholder={i18n.CONTACT_FORM.FORM.PHONE.PLACEHOLDER} />
  </div>
  {
    !hiddenSubject && (
      <InputText name={i18n.CONTACT_FORM.FORM.SUBJECT.ID} label={i18n.CONTACT_FORM.FORM.SUBJECT.LABEL} placeholder={i18n.CONTACT_FORM.FORM.SUBJECT.PLACEHOLDER} value={subject || ''} />
    )
  }
  <InputArea name={i18n.CONTACT_FORM.FORM.MESSAGE.ID} label={i18n.CONTACT_FORM.FORM.MESSAGE.LABEL} placeholder={i18n.CONTACT_FORM.FORM.MESSAGE.PLACEHOLDER} />
  <FormButton type="submit" text={sendText || i18n.CONTACT_FORM.FORM.SEND} />
</form>